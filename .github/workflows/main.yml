# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test, build and deploy

on:
  push: {}
  pull_request: {}

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.9]
        # os: [macos-latest, ubuntu-latest, windows-latest]
        # python-version: [3.8, 3.9]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: bash ./script/install-dependencies.sh
    - name: Lint with flake8
      run: flake8 . --count
    - name: Test with pytest
      if: startsWith(matrix.os, 'ubuntu')
      run: DISPLAY=:0 pytest
    - name: Test with pytest
      if: "!startsWith(matrix.os, 'ubuntu')"
      run: pytest
    - name: Upload coverage data
      if: github.event_name != 'schedule'
      continue-on-error: ${{ matrix.continue || false }}
      uses: codecov/codecov-action@v1
      with:
        name: os:${{ matrix.os }} py:${{ matrix.python }}

  release:
    name: New release
    if: github.repository == 'smallbomb/kirafan-bot' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs:
      - test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 300
      - name: Fetch tags
        run: git fetch --depth=300 origin +refs/tags/*:refs/tags/*
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          bash ./script/install-dependencies.sh
          bash ./script/pre-release.sh
      - name: set release name
        id: release-name
        run: echo ::set-output name=verion_name::kirara-bot $(echo ${{ github.ref }} | sed 's/.*v//')
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          title: "${{ steps.release-name.outputs.verion_name }}"
          files: |
            *.tar    

